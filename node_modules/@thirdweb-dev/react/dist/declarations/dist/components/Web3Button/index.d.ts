import { ThemeProviderProps } from "../shared/ThemeProvider";
import { TransactionError, TransactionResult } from "@thirdweb-dev/sdk";
import type { CallOverrides } from "ethers";
import { PropsWithChildren } from "react";
interface Web3ButtonProps extends ThemeProviderProps {
    contractAddress: `0x${string}` | `${string}.eth`;
    functionName: string;
    params?: unknown[] | (() => Promise<unknown[]>);
    overrides?: CallOverrides;
    onSuccess?: (result: TransactionResult) => void;
    onError?: (error: TransactionError) => void;
    onSubmit?: () => void;
    isDisabled?: boolean;
}
/**
 * A component that allows the user to call an on-chain function on a contract.
 *
 * The button has to be wrapped in a `ThirdwebProvider` in order to function.
 *
 * @example
 * ```javascript
 * import { Web3Button } from '@thirdweb-dev/react';
 *
 * const App = () => {
 *  return (
 *   <div>
 *     <Web3Button contractAddress="0x..." functionName="mint" />
 *   </div>
 * )
 * }
 * ```
 *
 *
 * @beta
 */
export declare const Web3Button: React.FC<PropsWithChildren<Web3ButtonProps>>;
export {};
